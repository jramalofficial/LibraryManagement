@using LibraryManagement.Models.ViewModels
@model LibraryManagement.Models.ViewModels.BookListViewModel

<div class="container py-4">
    <div class="d-flex flex-wrap justify-content-between align-items-center mb-4">
        <h2 class="mb-3 mb-md-0">📚 Available Books</h2>

        <div class="d-flex flex-wrap gap-2">
            @if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
            {
                <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addBookModal">Add Book</button>
                <a asp-action="BorrowedBooks" asp-controller="Book" class="btn btn-outline-primary">Borrowed Books</a>
                <a asp-action="ShowDate" asp-controller="Book" class="btn btn-outline-warning">Edit Return Date</a>
            }
            else if (User.Identity.IsAuthenticated)
            {
                <a asp-action="UserBookList" asp-controller="Book" class="btn btn-outline-info">📋 Borrowing Status</a>
            }
        </div>
    </div>

    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <strong>✔️ Success:</strong> @TempData["Success"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }
    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <strong>Error:</strong> @TempData["Error"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    @if (!Model.Books.Any())
    {
        <div class="alert alert-warning text-center">No books found in the library.</div>
    }
    else
    {
        <div class="table-responsive">
            <table class="table table-hover align-middle table-bordered">
                <thead class="table-dark text-center">
                    <tr>
                        <th>Cover</th>
                        <th>Title</th>
                        <th>Author</th>
                        <th>Description</th>
                        <th>Copies</th>
                        @if (User.IsInRole("User"))
                        {
                            <th>Action</th>
                        }
                        @if (User.IsInRole("Admin"))
                        {
                            <th>Edit</th>
                            <th>Delete</th>
                        }                    
                    </tr>
                </thead>
                <tbody>
                    @foreach (var book in Model.Books)
                    {
                        <tr>
                            <td>
                            @if (!string.IsNullOrEmpty(book.CoverImageUrl))
                            {
                                <img src="@book.CoverImageUrl" alt="Cover Image" style="width: 80px; height: 120px; object-fit: cover;" />
                            }
                            else
                            {
                                <span class="text-muted">No Image</span>
                            }
                            </td>
                            <td>@book.Title</td>
                            <td>@book.Author</td>
                            <td class="text-truncate" style="max-width: 250px;">@book.Description</td>
                            <td class="text-center">@book.AvailableCopies</td>

                            @if (User.IsInRole("User"))
                            {
                                <td class="text-center">
                                    @if (book.AvailableCopies > 0)
                                    {
                                        <form asp-action="Borrow" method="post" asp-route-bookId="@book.Id" asp-route-page="@Model.CurrentPage">
                                            <button type="submit" class="btn btn-sm btn-success">Borrow</button>
                                        </form>
                                    }
                                    else
                                    {
                                        <span class="badge bg-danger">Unavailable</span>
                                    }
                                </td>
                            }

                            @if (User.IsInRole("Admin"))
                            {
                                <td class="text-center">
                                  <button class="btn btn-warning btn-sm" onclick="openEditModal('@book.Id')">Edit</button>

                                
                                </td>
                                <td class="text-center">
                                    <form asp-action="Delete" method="post" asp-route-id="@book.Id" onsubmit="return confirm('Are you sure?');">
                                        <button type="submit" class="btn btn-sm btn-outline-danger">Delete</button>
                                    </form>
                                </td>
                            }
                        </tr>
                    }
                </tbody>
            </table>
        </div>
       
        <div id="modalContainer"></div>
        <nav class="d-flex justify-content-center mt-4">
            <ul class="pagination">
                @for (int i = 1; i <= Model.TotalPages; i++)
                {
                    <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                        <a class="page-link" asp-action="Index" asp-route-page="@i">@i</a>
                    </li>
                }
            </ul>
        </nav>
    }
</div>

<div aria-live="polite" aria-atomic="true" class="position-relative">
    <div class="toast-container position-fixed bottom-0 end-0 p-3">
        @if (TempData["ToastMessage"] != null)
        {
            <div class="toast align-items-center text-bg-primary border-0 show" role="alert">
                <div class="d-flex">
                    <div class="toast-body">
                        @TempData["ToastMessage"]
                    </div>
                    <button type="button" class="btn-close me-2 m-auto" data-bs-dismiss="toast"></button>
                </div>
            </div>
        }
    </div>
</div>


@await Html.PartialAsync("AddViewModal", new AddViewModel()) 
@await Html.PartialAsync("_ValidationScriptsPartial");

@section Scripts{
    
    <script>
         $(document).ready(function() {
           
            $('#addBookForm').on('submit', function(e) {
                e.preventDefault();
                
                var form = $(this);
                var formData = new FormData(this);
                
                $.ajax({
                    url: form.attr('action'),
                    type: 'POST',
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function(response) {
                        
                        if (response.includes('modal-content')) {
                            $('#addBookModalContent').html($(response).find('#addBookModalContent').html());
                            
                            var newForm = $('#addBookForm');
                            newForm.removeData('validator');
                            newForm.removeData('unobtrusiveValidation');
                            $.validator.unobtrusive.parse(newForm);
                        } else {
                            
                            $('#addBookModal').modal('hide');
                            location.reload();
                        }
                    },
                    error: function() {
                        alert('An error occurred while adding the book.');
                    }
                });
            });
        });

        function openEditModal(bookId) {
            $.ajax({
                url: '/Book/Edit/' + bookId,
                type: 'GET',
                success: function (partialView) {          
                     $('#modalContainer').html(partialView);
                     $('#editBookModal').modal('show');
                     
                     $('#editBookModal').on('shown.bs.modal', function () {
                         var form = $('#editBookForm');
                         if (form.length > 0) {
                             form.removeData('validator');
                             form.removeData('unobtrusiveValidation');
                             $.validator.unobtrusive.parse(form);
                         }
                     });
                },
                error: function (xhr, status, error) {
                    console.error('AJAX Error:', error); 
                    alert('Failed to load book details: ' + error);
                }
            });
        }
    </script>
}



  