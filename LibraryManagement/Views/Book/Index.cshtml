@model LibraryManagement.Models.ViewModels.BookListViewModel

<div class="container py-4">
    <div class="d-flex flex-wrap justify-content-between align-items-center mb-4">
        <h2 class="mb-3 mb-md-0">📚 Available Books</h2>

        <div class="d-flex flex-wrap gap-2">
            @if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
            {
                <button class="btn btn-success" id="addBookButton" data-bs-toggle="modal" data-bs-target="#addBookModal">➕ Add Book</button>
                <a asp-action="BorrowedBooks" asp-controller="Book" class="btn btn-outline-primary">📘 Borrowed Books</a>
                <a asp-action="ShowDate" asp-controller="Book" class="btn btn-outline-warning">⏰ Edit Return Date</a>
            }
            else if (User.Identity.IsAuthenticated)
            {
                <a asp-action="UserBookList" asp-controller="Book" class="btn btn-outline-info">📋 Borrowing Status</a>
            }
        </div>
    </div>

    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <strong>✔️ Success:</strong> @TempData["Success"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }
    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <strong>❌ Error:</strong> @TempData["Error"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    @if (!Model.Books.Any())
    {
        <div class="alert alert-warning text-center">No books found in the library.</div>
    }
    else
    {
        <div class="table-responsive">
            <table class="table table-hover align-middle table-bordered">
                <thead class="table-dark text-center">
                    <tr>
                        <th>Cover</th>
                        <th>📖 Title</th>
                        <th>✍️ Author</th>
                        <th>📝 Description</th>
                        <th>📦 Copies</th>
                        @if (User.IsInRole("User"))
                        {
                            <th>Action</th>
                        }
                        @if (User.IsInRole("Admin"))
                        {
                            <th>Edit</th>
                            <th>Delete</th>
                        }                    
                    </tr>
                </thead>
                <tbody>
                    @foreach (var book in Model.Books)
                    {
                        <tr>
                            <td>
                            @if (!string.IsNullOrEmpty(book.CoverImageUrl))
                            {
                                <img src="@book.CoverImageUrl" alt="Cover Image" style="width: 80px; height: 120px; object-fit: cover;" />
                            }
                            else
                            {
                                <span class="text-muted">No Image</span>
                            }
                            </td>
                            <td>@book.Title</td>
                            <td>@book.Author</td>
                            <td class="text-truncate" style="max-width: 250px;">@book.Description</td>
                            <td class="text-center">@book.AvailableCopies</td>

                            @if (User.IsInRole("User"))
                            {
                                <td class="text-center">
                                    @if (book.AvailableCopies > 0)
                                    {
                                        <form asp-action="Borrow" method="post" asp-route-bookId="@book.Id" asp-route-page="@Model.CurrentPage">
                                            <button type="submit" class="btn btn-sm btn-success">Borrow</button>
                                        </form>
                                    }
                                    else
                                    {
                                        <span class="badge bg-danger">Unavailable</span>
                                    }
                                </td>
                            }

                            @if (User.IsInRole("Admin"))
                            {
                                <td class="text-center">
                                    <button class="btn btn-sm btn-outline-primary edit-book-btn"
                                            data-id="@book.Id"
                                            data-title="@book.Title"
                                            data-author="@book.Author"
                                            data-description="@book.Description"
                                            data-copies="@book.AvailableCopies"
                                            data-bs-toggle="modal"
                                            data-bs-target="#addBookModal">
                                        Edit
                                    </button>
                                </td>
                                <td class="text-center">
                                    <form asp-action="Delete" method="post" asp-route-id="@book.Id" onsubmit="return confirm('Are you sure?');">
                                        <button type="submit" class="btn btn-sm btn-outline-danger">Delete</button>
                                    </form>
                                </td>
                            }
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        
        <nav class="d-flex justify-content-center mt-4">
            <ul class="pagination">
                @for (int i = 1; i <= Model.TotalPages; i++)
                {
                    <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                        <a class="page-link" asp-action="Index" asp-route-page="@i">@i</a>
                    </li>
                }
            </ul>
        </nav>
    }
</div>



@section Scripts {
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const $form = $('#addBookForm');
        const $modal = $('#addBookModal');
        const $coverImageInput = $('#CoverImageUrl');

        // 🖊️ Handle Edit Book
        $('.edit-book-btn').on('click', function () {
            const btn = this;
            $('#book-id').val(btn.dataset.id || '');
            $('#Title').val(btn.dataset.title || '');
            $('#Author').val(btn.dataset.author || '');
            $('#Description').val(btn.dataset.description || '');
            $('#AvailableCopies').val(btn.dataset.copies || '');

            $('#bookModalLabel').text('Edit Book');
            $('#bookFormSubmit').text('Update Book');
            $form.attr('action', '/Book/Edit');

            // 🟢 Make file upload optional in Edit mode
            $coverImageInput.removeAttr('data-val-required');
            $coverImageInput.rules('remove', 'required');

            $modal.modal('show');
        });

        // ➕ Handle Add Book
        $('#addBookButton').on('click', function () {
            $('#bookModalLabel').text('Add Book');
            $('#bookFormSubmit').text('Add Book');
            $form.attr('action', '/Book/Add');

            // 🔴 Make file upload required in Add mode
            $coverImageInput.attr('data-val-required', 'Cover image is required.');
            $coverImageInput.rules('add', {
                required: true,
                messages: {
                    required: 'Cover image is required.'
                }
            });

            $modal.modal('show');
        });

        // 🧼 Reset the form on modal close
        $modal.on('hidden.bs.modal', function () {
            $form[0].reset();
            $form.find('.text-danger').text('');
            $form.find('.form-control').removeClass('is-invalid is-valid');

            // Reset validation state
            $form.validate().resetForm();
        });
    });
</script>
}



